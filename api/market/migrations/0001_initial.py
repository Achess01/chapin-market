# Generated by Django 4.2 on 2023-09-21 05:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import market.models.sale


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('address', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': '"market"."branch"',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('last_accumulated', models.DecimalField(decimal_places=2, max_digits=10)),
                ('points', models.PositiveIntegerField()),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'COMUN'), (2, 'ORO'), (3, 'PLATINO'), (4, 'DIAMANTE')])),
            ],
            options={
                'db_table': '"market"."card"',
            },
        ),
        migrations.CreateModel(
            name='Cashier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('number', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': '"market"."cashier"',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('nit', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(message='Nit must be 9 digits', regex='[1-9][0-9]{8}$')])),
            ],
            options={
                'db_table': '"market"."customer"',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('barcode', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Barcode must be 12 digits', regex='\\d{12}$')])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': '"market"."product"',
            },
        ),
        migrations.CreateModel(
            name='ProductShelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('qty', models.PositiveIntegerField(help_text='Quantity of product in the branch shelves')),
                ('hallway', models.PositiveSmallIntegerField(verbose_name='Hallway number where a product can be find')),
            ],
            options={
                'db_table': '"market"."product_shelf"',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('invoice_no', models.CharField(default=market.models.sale.increment_invoice_number, max_length=255, unique=True)),
                ('customer_nit', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(message='Nit must be 9 digits', regex='[1-9][0-9]{8}$')])),
                ('customer_name', models.CharField(max_length=70)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='market.branch')),
                ('cashier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='market.cashier')),
            ],
            options={
                'db_table': '"market"."sale"',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='market.branch')),
            ],
            options={
                'db_table': '"market"."store"',
            },
        ),
        migrations.CreateModel(
            name='StoreProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('qty', models.PositiveIntegerField(help_text='Quantity of product in the store')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='market.product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='market.store')),
            ],
            options={
                'db_table': '"market"."store_product"',
            },
        ),
        migrations.CreateModel(
            name='SaleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('qty', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='market.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='market.sale')),
            ],
            options={
                'db_table': '"market"."sale_product"',
            },
        ),
    ]
